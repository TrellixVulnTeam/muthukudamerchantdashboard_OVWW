{"version":3,"sources":["./src/app/product/addproduct/addproduct-routing.module.ts","./src/app/product/addproduct/addproduct.module.ts","./src/app/product/addproduct/addproduct.page.ts","./src/app/product/addproduct/addproduct.page.scss","./src/app/product/addproduct/addproduct.page.html"],"names":[],"mappings":"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","file":"src_app_product_addproduct_addproduct_module_ts-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddproductPage } from './addproduct.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddproductPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddproductPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddproductPageRoutingModule } from './addproduct-routing.module';\n\nimport { AddproductPage } from './addproduct.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AddproductPageRoutingModule\n  ],\n  declarations: [AddproductPage]\n})\nexport class AddproductPageModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ToastController } from '@ionic/angular';\nimport { Product } from 'src/app/product';\n\n@Component({\n  selector: 'app-addproduct',\n  templateUrl: './addproduct.page.html',\n  styleUrls: ['./addproduct.page.scss'],\n})\nexport class AddproductPage implements OnInit {\n\n  public itemNumber: number = 1;\n  public defaultQuantityinStock: number = 10;\n  public maxQuantityLimit: number = 10;\n  public minQuantityLimit: number = 1;\n  public productWeightUnit: string = 'G'\n\n  constructor(private http:HttpClient, public toastController: ToastController) { }\n\n  async presentToast() {\n    const toast = await this.toastController.create({\n      message: 'New Product Successfully Saved!',\n      cssClass: \"backtoast\",\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  ngOnInit() {\n\n    this.http\n      .get<{ [key: string]: Product }>(\n        \"https://muthukudamerchant-496e8-default-rtdb.firebaseio.com/newlyaddedproductswithoutimage.json\"\n      )\n      .subscribe((resData) => {\n        for (const key in resData) {\n          if (resData.hasOwnProperty(key)) {\n            this.itemNumber = this.itemNumber + 1;\n          }\n        }\n      });\n  }\n\n  onSubmit(form: NgForm) {\n    if (!form.valid) {\n      return;\n    }\n\n    const newProduct: Product = {\n      key: null,\n      productnumber: this.itemNumber,\n      productname: form.value.productName,\n      imageUrl: 'https://firebasestorage.googleapis.com/v0/b/muthukudamerchant-496e8.appspot.com/o/2048px-No_image_available.svg.png?alt=media&token=795c44a2-ef49-4d52-a765-b7640d6ebe87',\n      productWeight: form.value.productWeight + this.productWeightUnit,\n      productmaxsellingprice: form.value.maxSellingPrice,\n      productoursellingprice: form.value.ourPrice,\n      quantityinstock: this.defaultQuantityinStock,\n      itemMaxQuantity: this.maxQuantityLimit,\n      itemMinQuantity: this.minQuantityLimit,\n      \n   };\n    this.http.post<{name: string}>(\"https://muthukudamerchant-496e8-default-rtdb.firebaseio.com/newlyaddedproductswithoutimage.json\", newProduct)\n      .subscribe(resData => {\n          this.itemNumber = this.itemNumber + 1;\n          form.reset();\n          this.presentToast();\n          \n        }\n      );\n  }\n\n  _ionChangeQIS(event) {\n\n    this.defaultQuantityinStock = Number(event.target.value);\n\n  }\n\n  _ionChangeMOQ(event) {\n    this.maxQuantityLimit = Number(event.target.value);\n  }\n\n  _ionChangeMinOQ(event) {\n    this.minQuantityLimit = Number(event.target.value);\n  }\n\n  segmentChanged(event) {\n    this.productWeightUnit = event.target.value;\n  }\n\n}\n","export default \"#itemnumberID {\\n  font-family: futura-pt, sans-serif;\\n  font-weight: 700;\\n  font-style: normal;\\n  font-size: 20px;\\n}\\n\\nion-fab {\\n  margin-bottom: 20px;\\n  margin-right: 20px;\\n}\\n\\n.fontFamily {\\n  font-family: brandon-grotesque, sans-serif;\\n  font-weight: 500;\\n  font-style: normal;\\n}\\n\\n.inputClass {\\n  font-family: brandon-grotesque, sans-serif;\\n  font-weight: 500;\\n  font-style: normal;\\n}\\n\\nion-title {\\n  font-family: brandon-grotesque, sans-serif;\\n  font-weight: 500;\\n  font-style: normal;\\n}\\n\\n.kiloButton {\\n  width: 58px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZHByb2R1Y3QucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0NBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtBQUNKOztBQUVBO0VBQ0ksbUJBQUE7RUFDQSxrQkFBQTtBQUNKOztBQUVBO0VBQ0ksMENBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0FBQ0o7O0FBRUU7RUFDRSwwQ0FBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7QUFDSjs7QUFHRTtFQUNFLDBDQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtBQUFKOztBQUdFO0VBQ0UsV0FBQTtBQUFKIiwiZmlsZSI6ImFkZHByb2R1Y3QucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2l0ZW1udW1iZXJJRCB7XG4gICAgZm9udC1mYW1pbHk6IGZ1dHVyYS1wdCxzYW5zLXNlcmlmO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuaW9uLWZhYiB7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG59XG5cbi5mb250RmFtaWx5IHtcbiAgICBmb250LWZhbWlseTogYnJhbmRvbi1ncm90ZXNxdWUsIHNhbnMtc2VyaWY7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gIH1cblxuICAuaW5wdXRDbGFzcyB7XG4gICAgZm9udC1mYW1pbHk6IGJyYW5kb24tZ3JvdGVzcXVlLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICB9XG5cblxuICBpb24tdGl0bGUge1xuICAgIGZvbnQtZmFtaWx5OiBicmFuZG9uLWdyb3Rlc3F1ZSwgc2Fucy1zZXJpZjtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgfVxuXG4gIC5raWxvQnV0dG9uIHtcbiAgICB3aWR0aDogNThweDtcbiAgfVxuIl19 */\";","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>ADD PRODUCTS</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button>\\n      <ion-text id=\\\"itemnumberID\\\">{{itemNumber}}</ion-text>\\n    </ion-fab-button>\\n  </ion-fab>\\n\\n  <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\n\\n    <ion-item>\\n      <ion-label class=\\\"inputClass\\\" position=\\\"floating\\\">Product Name</ion-label>\\n      <ion-input class=\\\"inputClass ion-text-capitalize\\\" type=\\\"text\\\" ngModel name=\\\"productName\\\" clearInput required #productNameCtrl=\\\"ngModel\\\"></ion-input>\\n    </ion-item>\\n    <ion-item *ngIf=\\\"!productNameCtrl.valid && productNameCtrl.touched\\\" lines=\\\"none\\\">\\n      <ion-label class=\\\"fontFamily\\\" color=\\\"danger\\\">Product Name field should not be empty</ion-label>\\n    </ion-item>\\n  \\n    <ion-item>\\n      <ion-label class=\\\"inputClass\\\" position=\\\"floating\\\">Quantity in Stock</ion-label>\\n      <ion-input class=\\\"inputClass\\\" type=\\\"number\\\" [value]=\\\"defaultQuantityinStock\\\" (ionChange)=\\\"_ionChangeQIS($event)\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-input class=\\\"inputClass\\\" type=\\\"text\\\" placeholder=\\\"Product Weight\\\" ngModel name=\\\"productWeight\\\" clearInput required #productWeightCtrl=\\\"ngModel\\\"></ion-input>\\n      <div class=\\\"ion-text-warp\\\">\\n\\n        <ion-segment (ionChange)=\\\"segmentChanged($event)\\\" value=\\\"G\\\">\\n          <ion-segment-button value=\\\"G\\\">\\n            <ion-label class=\\\"fontFamily\\\">Grams</ion-label>\\n          </ion-segment-button>\\n          <ion-segment-button value=\\\"KG\\\">\\n            <ion-label class=\\\"fontFamily\\\">Kilo</ion-label>\\n          </ion-segment-button>\\n          <ion-segment-button value=\\\"ML\\\">\\n            <ion-label class=\\\"fontFamily\\\">Mil</ion-label>\\n          </ion-segment-button>\\n          <ion-segment-button value=\\\"L\\\">\\n            <ion-label class=\\\"fontFamily\\\">L</ion-label>\\n          </ion-segment-button>\\n        </ion-segment>\\n        \\n      </div>\\n      \\n    </ion-item>\\n    <ion-item *ngIf=\\\"!productWeightCtrl.valid && productWeightCtrl.touched\\\" lines=\\\"none\\\">\\n      <ion-label class=\\\"fontFamily\\\" color=\\\"danger\\\">Product Weight field should not be empty</ion-label>\\n    </ion-item>\\n  \\n    <ion-item>\\n      <ion-label class=\\\"inputClass\\\" position=\\\"floating\\\">MRP</ion-label>\\n      <ion-input class=\\\"inputClass\\\" type=\\\"number\\\" ngModel name=\\\"maxSellingPrice\\\" clearInput required #maxsellingpriceCtrl=\\\"ngModel\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item *ngIf=\\\"!maxsellingpriceCtrl.valid && maxsellingpriceCtrl.touched\\\" lines=\\\"none\\\">\\n      <ion-label class=\\\"fontFamily\\\" color=\\\"danger\\\">MRP Should not be empty</ion-label>\\n    </ion-item>\\n  \\n    <ion-item>\\n      <ion-label class=\\\"inputClass\\\" position=\\\"floating\\\">Our Price</ion-label>\\n      <ion-input class=\\\"inputClass\\\" type=\\\"number\\\" ngModel name=\\\"ourPrice\\\" clearInput required #oursellingpriceCtrl=\\\"ngModel\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item *ngIf=\\\"!oursellingpriceCtrl.valid && oursellingpriceCtrl.touched\\\" lines=\\\"none\\\">\\n      <ion-label class=\\\"fontFamily\\\" color=\\\"danger\\\">Our Price Should not be empty</ion-label>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label class=\\\"inputClass\\\" position=\\\"floating\\\">Max Quantity Limit</ion-label>\\n      <ion-input class=\\\"inputClass\\\" type=\\\"number\\\" [value]=\\\"maxQuantityLimit\\\" (ionChange)=\\\"_ionChangeMOQ($event)\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item lines=\\\"none\\\">\\n      <ion-label class=\\\"inputClass\\\" position=\\\"floating\\\">Min Quantity Limit</ion-label>\\n      <ion-input class=\\\"inputClass\\\" type=\\\"number\\\" [value]=\\\"minQuantityLimit\\\" (ionChange)=\\\"_ionChangeMinOQ($event)\\\"></ion-input>\\n    </ion-item>\\n\\n    <br>\\n    <ion-button class=\\\"addCarButton fontFamily\\\" color=\\\"success\\\" type=\\\"submit\\\" expand=\\\"block\\\" shape=\\\"round\\\" [disabled]=\\\"!f.valid\\\">ADD PRODUCT</ion-button>\\n\\n  </form>\\n  \\n\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}