{"version":3,"sources":["webpack:///src/app/product/addproduct/addproduct-routing.module.ts","webpack:///src/app/product/addproduct/addproduct.module.ts","webpack:///src/app/product/addproduct/addproduct.page.ts","webpack:///src/app/product/addproduct/addproduct.page.scss","webpack:///src/app/product/addproduct/addproduct.page.html"],"names":["routes","path","component","AddproductPage","AddproductPageRoutingModule","NgModule","imports","RouterModule","exports","AddproductPageModule","CommonModule","FormsModule","IonicModule","declarations","http","toastController","itemNumber","defaultQuantityinStock","maxQuantityLimit","minQuantityLimit","productWeightUnit","create","message","cssClass","duration","toast","present","get","subscribe","resData","key","hasOwnProperty","form","valid","newProduct","productnumber","productname","value","productName","imageUrl","productWeight","productmaxsellingprice","maxSellingPrice","productoursellingprice","ourPrice","quantityinstock","itemMaxQuantity","itemMinQuantity","post","reset","presentToast","event","Number","target","HttpClient","ToastController","Component","selector","template"],"mappings":"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","file":"src_app_product_addproduct_addproduct_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddproductPage } from './addproduct.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddproductPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddproductPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddproductPageRoutingModule } from './addproduct-routing.module';\n\nimport { AddproductPage } from './addproduct.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AddproductPageRoutingModule\n  ],\n  declarations: [AddproductPage]\n})\nexport class AddproductPageModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ToastController } from '@ionic/angular';\nimport { Product } from 'src/app/product';\n\n@Component({\n  selector: 'app-addproduct',\n  templateUrl: './addproduct.page.html',\n  styleUrls: ['./addproduct.page.scss'],\n})\nexport class AddproductPage implements OnInit {\n\n  public itemNumber: number = 1;\n  public defaultQuantityinStock: number = 10;\n  public maxQuantityLimit: number = 10;\n  public minQuantityLimit: number = 1;\n  public productWeightUnit: string = 'G'\n\n  constructor(private http:HttpClient, public toastController: ToastController) { }\n\n  async presentToast() {\n    const toast = await this.toastController.create({\n      message: 'New Product Successfully Saved!',\n      cssClass: \"backtoast\",\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  ngOnInit() {\n\n    this.http\n      .get<{ [key: string]: Product }>(\n        \"https://muthukudamerchant-496e8-default-rtdb.firebaseio.com/newlyaddedproductswithoutimage.json\"\n      )\n      .subscribe((resData) => {\n        for (const key in resData) {\n          if (resData.hasOwnProperty(key)) {\n            this.itemNumber = this.itemNumber + 1;\n          }\n        }\n      });\n  }\n\n  onSubmit(form: NgForm) {\n    if (!form.valid) {\n      return;\n    }\n\n    const newProduct: Product = {\n      key: null,\n      productnumber: this.itemNumber,\n      productname: form.value.productName,\n      imageUrl: 'https://firebasestorage.googleapis.com/v0/b/muthukudamerchant-496e8.appspot.com/o/2048px-No_image_available.svg.png?alt=media&token=795c44a2-ef49-4d52-a765-b7640d6ebe87',\n      productWeight: form.value.productWeight + this.productWeightUnit,\n      productmaxsellingprice: form.value.maxSellingPrice,\n      productoursellingprice: form.value.ourPrice,\n      quantityinstock: this.defaultQuantityinStock,\n      itemMaxQuantity: this.maxQuantityLimit,\n      itemMinQuantity: this.minQuantityLimit,\n      \n   };\n    this.http.post<{name: string}>(\"https://muthukudamerchant-496e8-default-rtdb.firebaseio.com/newlyaddedproductswithoutimage.json\", newProduct)\n      .subscribe(resData => {\n          this.itemNumber = this.itemNumber + 1;\n          form.reset();\n          this.presentToast();\n          \n        }\n      );\n  }\n\n  _ionChangeQIS(event) {\n\n    this.defaultQuantityinStock = Number(event.target.value);\n\n  }\n\n  _ionChangeMOQ(event) {\n    this.maxQuantityLimit = Number(event.target.value);\n  }\n\n  _ionChangeMinOQ(event) {\n    this.minQuantityLimit = Number(event.target.value);\n  }\n\n  segmentChanged(event) {\n    this.productWeightUnit = event.target.value;\n  }\n\n}\n","export default \"#itemnumberID {\\n  font-family: futura-pt, sans-serif;\\n  font-weight: 700;\\n  font-style: normal;\\n  font-size: 20px;\\n}\\n\\nion-fab {\\n  margin-bottom: 20px;\\n  margin-right: 20px;\\n}\\n\\n.fontFamily {\\n  font-family: brandon-grotesque, sans-serif;\\n  font-weight: 500;\\n  font-style: normal;\\n}\\n\\n.inputClass {\\n  font-family: brandon-grotesque, sans-serif;\\n  font-weight: 500;\\n  font-style: normal;\\n}\\n\\nion-title {\\n  font-family: brandon-grotesque, sans-serif;\\n  font-weight: 500;\\n  font-style: normal;\\n}\\n\\n.kiloButton {\\n  width: 58px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZHByb2R1Y3QucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0NBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtBQUNKOztBQUVBO0VBQ0ksbUJBQUE7RUFDQSxrQkFBQTtBQUNKOztBQUVBO0VBQ0ksMENBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0FBQ0o7O0FBRUU7RUFDRSwwQ0FBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7QUFDSjs7QUFHRTtFQUNFLDBDQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtBQUFKOztBQUdFO0VBQ0UsV0FBQTtBQUFKIiwiZmlsZSI6ImFkZHByb2R1Y3QucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2l0ZW1udW1iZXJJRCB7XG4gICAgZm9udC1mYW1pbHk6IGZ1dHVyYS1wdCxzYW5zLXNlcmlmO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuaW9uLWZhYiB7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG59XG5cbi5mb250RmFtaWx5IHtcbiAgICBmb250LWZhbWlseTogYnJhbmRvbi1ncm90ZXNxdWUsIHNhbnMtc2VyaWY7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gIH1cblxuICAuaW5wdXRDbGFzcyB7XG4gICAgZm9udC1mYW1pbHk6IGJyYW5kb24tZ3JvdGVzcXVlLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICB9XG5cblxuICBpb24tdGl0bGUge1xuICAgIGZvbnQtZmFtaWx5OiBicmFuZG9uLWdyb3Rlc3F1ZSwgc2Fucy1zZXJpZjtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgfVxuXG4gIC5raWxvQnV0dG9uIHtcbiAgICB3aWR0aDogNThweDtcbiAgfVxuIl19 */\";","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>ADD PRODUCTS</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button>\\n      <ion-text id=\\\"itemnumberID\\\">{{itemNumber}}</ion-text>\\n    </ion-fab-button>\\n  </ion-fab>\\n\\n  <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\n\\n    <ion-item>\\n      <ion-label class=\\\"inputClass\\\" position=\\\"floating\\\">Product Name</ion-label>\\n      <ion-input class=\\\"inputClass ion-text-capitalize\\\" type=\\\"text\\\" ngModel name=\\\"productName\\\" clearInput required #productNameCtrl=\\\"ngModel\\\"></ion-input>\\n    </ion-item>\\n    <ion-item *ngIf=\\\"!productNameCtrl.valid && productNameCtrl.touched\\\" lines=\\\"none\\\">\\n      <ion-label class=\\\"fontFamily\\\" color=\\\"danger\\\">Product Name field should not be empty</ion-label>\\n    </ion-item>\\n  \\n    <ion-item>\\n      <ion-label class=\\\"inputClass\\\" position=\\\"floating\\\">Quantity in Stock</ion-label>\\n      <ion-input class=\\\"inputClass\\\" type=\\\"number\\\" [value]=\\\"defaultQuantityinStock\\\" (ionChange)=\\\"_ionChangeQIS($event)\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-input class=\\\"inputClass\\\" type=\\\"text\\\" placeholder=\\\"Product Weight\\\" ngModel name=\\\"productWeight\\\" clearInput required #productWeightCtrl=\\\"ngModel\\\"></ion-input>\\n      <div class=\\\"ion-text-warp\\\">\\n\\n        <ion-segment (ionChange)=\\\"segmentChanged($event)\\\" value=\\\"G\\\">\\n          <ion-segment-button value=\\\"G\\\">\\n            <ion-label class=\\\"fontFamily\\\">Grams</ion-label>\\n          </ion-segment-button>\\n          <ion-segment-button value=\\\"KG\\\">\\n            <ion-label class=\\\"fontFamily\\\">Kilo</ion-label>\\n          </ion-segment-button>\\n          <ion-segment-button value=\\\"ML\\\">\\n            <ion-label class=\\\"fontFamily\\\">Mil</ion-label>\\n          </ion-segment-button>\\n          <ion-segment-button value=\\\"L\\\">\\n            <ion-label class=\\\"fontFamily\\\">L</ion-label>\\n          </ion-segment-button>\\n        </ion-segment>\\n        \\n      </div>\\n      \\n    </ion-item>\\n    <ion-item *ngIf=\\\"!productWeightCtrl.valid && productWeightCtrl.touched\\\" lines=\\\"none\\\">\\n      <ion-label class=\\\"fontFamily\\\" color=\\\"danger\\\">Product Weight field should not be empty</ion-label>\\n    </ion-item>\\n  \\n    <ion-item>\\n      <ion-label class=\\\"inputClass\\\" position=\\\"floating\\\">MRP</ion-label>\\n      <ion-input class=\\\"inputClass\\\" type=\\\"number\\\" ngModel name=\\\"maxSellingPrice\\\" clearInput required #maxsellingpriceCtrl=\\\"ngModel\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item *ngIf=\\\"!maxsellingpriceCtrl.valid && maxsellingpriceCtrl.touched\\\" lines=\\\"none\\\">\\n      <ion-label class=\\\"fontFamily\\\" color=\\\"danger\\\">MRP Should not be empty</ion-label>\\n    </ion-item>\\n  \\n    <ion-item>\\n      <ion-label class=\\\"inputClass\\\" position=\\\"floating\\\">Our Price</ion-label>\\n      <ion-input class=\\\"inputClass\\\" type=\\\"number\\\" ngModel name=\\\"ourPrice\\\" clearInput required #oursellingpriceCtrl=\\\"ngModel\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item *ngIf=\\\"!oursellingpriceCtrl.valid && oursellingpriceCtrl.touched\\\" lines=\\\"none\\\">\\n      <ion-label class=\\\"fontFamily\\\" color=\\\"danger\\\">Our Price Should not be empty</ion-label>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label class=\\\"inputClass\\\" position=\\\"floating\\\">Max Quantity Limit</ion-label>\\n      <ion-input class=\\\"inputClass\\\" type=\\\"number\\\" [value]=\\\"maxQuantityLimit\\\" (ionChange)=\\\"_ionChangeMOQ($event)\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item lines=\\\"none\\\">\\n      <ion-label class=\\\"inputClass\\\" position=\\\"floating\\\">Min Quantity Limit</ion-label>\\n      <ion-input class=\\\"inputClass\\\" type=\\\"number\\\" [value]=\\\"minQuantityLimit\\\" (ionChange)=\\\"_ionChangeMinOQ($event)\\\"></ion-input>\\n    </ion-item>\\n\\n    <br>\\n    <ion-button class=\\\"addCarButton fontFamily\\\" color=\\\"success\\\" type=\\\"submit\\\" expand=\\\"block\\\" shape=\\\"round\\\" [disabled]=\\\"!f.valid\\\">ADD PRODUCT</ion-button>\\n\\n  </form>\\n  \\n\\n</ion-content>\\n\";"]}